{"ast":null,"code":"var _jsxFileName = \"E:\\\\zzz\\\\toDoApp\\\\todo-client\\\\src\\\\Pages\\\\TodoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskList from '../Components/TaskList';\nimport AddTaskForm from '../Components/AddTaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoApp = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/gettasklist');\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data);\n        } else {\n          console.error('Failed to fetch tasks:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Failed to fetch tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const addTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const completeTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:3000/edittask/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          completed: true\n        })\n      });\n      if (response.ok) {\n        setTasks(tasks.map(task => task.id === taskId ? {\n          ...task,\n          completed: true\n        } : task));\n      } else {\n        console.error('Failed to complete task:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Failed to complete task:', error);\n    }\n  };\n  const dropTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:3000/droptask/${taskId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setTasks(tasks.filter(task => task.id !== taskId));\n      } else {\n        console.error('Failed to drop task:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Failed to drop task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this)\n  // <div className=\"max-w-md mx-auto p-4\">\n  //   <h1 className=\"text-2xl font-bold mb-4\">Todo List</h1>\n  //   <AddTaskForm onAddTask={addTask} />\n  //   <TaskList tasks={tasks} onComplete={completeTask} onDrop={dropTask} />\n  // </div>\n  ;\n};\n_s(TodoApp, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","AddTaskForm","jsxDEV","_jsxDEV","TodoApp","_s","tasks","setTasks","fetchTasks","response","fetch","ok","data","json","console","error","statusText","addTask","newTask","completeTask","taskId","method","headers","body","JSON","stringify","completed","map","task","id","dropTask","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/zzz/toDoApp/todo-client/src/Pages/TodoApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskList from '../Components/TaskList';\r\nimport AddTaskForm from '../Components/AddTaskForm';\r\n\r\n\r\nconst TodoApp = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/gettasklist');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTasks(data);\r\n        } else {\r\n          console.error('Failed to fetch tasks:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch tasks:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const addTask = (newTask) => {\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  const completeTask = async (taskId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/edittask/${taskId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ completed: true }),\r\n      });\r\n      if (response.ok) {\r\n        setTasks(tasks.map((task) => (task.id === taskId ? { ...task, completed: true } : task)));\r\n      } else {\r\n        console.error('Failed to complete task:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to complete task:', error);\r\n    }\r\n  };\r\n\r\n  const dropTask = async (taskId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/droptask/${taskId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (response.ok) {\r\n        setTasks(tasks.filter((task) => task.id !== taskId));\r\n      } else {\r\n        console.error('Failed to drop task:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to drop task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>Hi</div>\r\n    // <div className=\"max-w-md mx-auto p-4\">\r\n    //   <h1 className=\"text-2xl font-bold mb-4\">Todo List</h1>\r\n    //   <AddTaskForm onAddTask={addTask} />\r\n    //   <TaskList tasks={tasks} onComplete={completeTask} onDrop={dropTask} />\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}