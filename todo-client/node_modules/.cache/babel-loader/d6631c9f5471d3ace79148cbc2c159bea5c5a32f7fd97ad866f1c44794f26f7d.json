{"ast":null,"code":"var _jsxFileName = \"E:\\\\zzz\\\\toDoApp\\\\todo-client\\\\src\\\\Pages\\\\TodoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskList from '../Components/TaskList';\nimport AddTaskForm from '../Components/AddTaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoApp = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/gettasklist');\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data[0]);\n        setTasks(data);\n      } else {\n        console.error('Failed to fetch tasks:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Failed to fetch tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const addTask = newTask => {\n    fetchTasks();\n  };\n  const completeTask = async id => {\n    try {\n      const response = await fetch(`/api/edittask/${id}`, {\n        method: 'PATCH',\n        // Change method to PATCH\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          completed: true\n        }) // Send the updated data\n      });\n      if (response.ok) {\n        const updatedTask = await response.json();\n        setTasks(tasks.map(task => task.id === id ? updatedTask : task));\n      } else {\n        console.error('Failed to complete task:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Failed to complete task:', error);\n    }\n  };\n  const dropTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/droptask/${taskId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setTasks(tasks.filter(task => task.id !== taskId));\n      } else {\n        console.error('Failed to drop task:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Failed to drop task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      onAddTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onComplete: completeTask,\n      onDrop: dropTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoApp, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","AddTaskForm","jsxDEV","_jsxDEV","TodoApp","_s","tasks","setTasks","fetchTasks","response","fetch","ok","data","json","console","log","error","statusText","addTask","newTask","completeTask","id","method","headers","body","JSON","stringify","completed","updatedTask","map","task","dropTask","taskId","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","onComplete","onDrop","_c","$RefreshReg$"],"sources":["E:/zzz/toDoApp/todo-client/src/Pages/TodoApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskList from '../Components/TaskList';\r\nimport AddTaskForm from '../Components/AddTaskForm';\r\n\r\n\r\nconst TodoApp = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/api/gettasklist');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(data[0]);\r\n        setTasks(data);\r\n      } else {\r\n        console.error('Failed to fetch tasks:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch tasks:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const addTask = (newTask) => {\r\n    fetchTasks();\r\n  };\r\n\r\n  const completeTask = async (id) => {\r\n    try {\r\n      const response = await fetch(`/api/edittask/${id}`, {\r\n        method: 'PATCH', // Change method to PATCH\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ completed: true }) // Send the updated data\r\n      });\r\n      if (response.ok) {\r\n        const updatedTask = await response.json();\r\n        setTasks(tasks.map(task => (task.id === id ? updatedTask : task)));\r\n      } else {\r\n        console.error('Failed to complete task:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to complete task:', error);\r\n    }\r\n  };\r\n  const dropTask = async (taskId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/api/droptask/${taskId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (response.ok) {\r\n        setTasks(tasks.filter((task) => task.id !== taskId));\r\n      } else {\r\n        console.error('Failed to drop task:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to drop task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Todo List</h1>\r\n      <AddTaskForm onAddTask={addTask} />\r\n      <TaskList tasks={tasks} onComplete={completeTask} onDrop={dropTask} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}