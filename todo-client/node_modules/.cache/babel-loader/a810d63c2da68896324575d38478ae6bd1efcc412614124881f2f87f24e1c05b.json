{"ast":null,"code":"var _jsxFileName = \"E:\\\\zzz\\\\toDoApp\\\\todo-client\\\\src\\\\Pages\\\\StatisticsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticsPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/gettasklist');\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data);\n        } else {\n          console.error('Failed to fetch tasks:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Failed to fetch tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const getTaskStats = () => {\n    const pendingCount = tasks.filter(task => !task.completed).length;\n    const completedCount = tasks.filter(task => task.completed).length;\n    return {\n      pendingCount,\n      completedCount\n    };\n  };\n  const renderChart = () => {\n    const {\n      pendingCount,\n      completedCount\n    } = getTaskStats();\n    const data = {\n      labels: ['Pending', 'Completed'],\n      datasets: [{\n        label: 'Tasks',\n        backgroundColor: ['#FF6384', '#36A2EB'],\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: [pendingCount, completedCount]\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Task Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: renderChart()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(StatisticsPage, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = StatisticsPage;\nexport default StatisticsPage;\nvar _c;\n$RefreshReg$(_c, \"StatisticsPage\");","map":{"version":3,"names":["React","useState","useEffect","Bar","jsxDEV","_jsxDEV","StatisticsPage","_s","tasks","setTasks","fetchTasks","response","fetch","ok","data","json","console","error","statusText","getTaskStats","pendingCount","filter","task","completed","length","completedCount","renderChart","labels","datasets","label","backgroundColor","borderColor","borderWidth","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["E:/zzz/toDoApp/todo-client/src/Pages/StatisticsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst StatisticsPage = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/gettasklist');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTasks(data);\r\n        } else {\r\n          console.error('Failed to fetch tasks:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch tasks:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const getTaskStats = () => {\r\n    const pendingCount = tasks.filter(task => !task.completed).length;\r\n    const completedCount = tasks.filter(task => task.completed).length;\r\n    return { pendingCount, completedCount };\r\n  };\r\n\r\n  const renderChart = () => {\r\n    const { pendingCount, completedCount } = getTaskStats();\r\n\r\n    const data = {\r\n      labels: ['Pending', 'Completed'],\r\n      datasets: [\r\n        {\r\n          label: 'Tasks',\r\n          backgroundColor: ['#FF6384', '#36A2EB'],\r\n          borderColor: 'rgba(0,0,0,1)',\r\n          borderWidth: 2,\r\n          data: [pendingCount, completedCount]\r\n        }\r\n      ]\r\n    };\r\n\r\n    return <Bar data={data} />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Task Statistics</h1>\r\n      <div className=\"mt-4\">{renderChart()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,QAAQ,CAACK,IAAI,CAAC;QAChB,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEN,QAAQ,CAACO,UAAU,CAAC;QAC9D;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDP,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAGZ,KAAK,CAACa,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,SAAS,CAAC,CAACC,MAAM;IACjE,MAAMC,cAAc,GAAGjB,KAAK,CAACa,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC,CAACC,MAAM;IAClE,OAAO;MAAEJ,YAAY;MAAEK;IAAe,CAAC;EACzC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAM;MAAEN,YAAY;MAAEK;IAAe,CAAC,GAAGN,YAAY,CAAC,CAAC;IAEvD,MAAML,IAAI,GAAG;MACXa,MAAM,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;MAChCC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,OAAO;QACdC,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;QACvCC,WAAW,EAAE,eAAe;QAC5BC,WAAW,EAAE,CAAC;QACdlB,IAAI,EAAE,CAACM,YAAY,EAAEK,cAAc;MACrC,CAAC;IAEL,CAAC;IAED,oBAAOpB,OAAA,CAACF,GAAG;MAACW,IAAI,EAAEA;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B,CAAC;EAED,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCjC,OAAA;MAAIgC,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAe;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5D/B,OAAA;MAAKgC,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEZ,WAAW,CAAC;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CApDID,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAsDpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}